.wrapper {
  max-width: 70rem;
  margin: 2rem 0 50px 0;
  padding: 0 1rem;
  
  display: grid;
  grid-template-columns: 350px 1fr;
  gap: 2rem;
  align-items: center;
}

.containerForm {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.containerForm input[type="submit"] {
  padding: 1rem 1.5rem;
  width: 50%;
  margin-top: 5rem;
  border-radius: 8px;
  border: 0;
  background: var(--violet-500);
  color: var(--white);
  font-weight: bold;
  cursor: pointer;
}

.containerForm textarea {
  width: 100%;
  background: var(--gray-800);
  border: 0;
  resize: none;
  height: 10rem;
  padding: 1rem;
  border-radius: 8px;
  color: var(--white);
  line-height: 1.6;
  margin-top: 1rem;
  border: 2px solid var(--violet-900);

}

.containerForm textarea:focus {
  border-color: var(--violet-400);
}

.containerForm textarea::placeholder {
  color: var(--gray-400);
}

.containerUploadButton {
  display: flex; 
  align-items: center;
  gap: 0.5rem; 
}

.containerUploadButton button{
  color: var(--gray-900);
  border: 2px solid var(--violet-900);
  background: var(--violet-400);
  padding: 1rem;
  border-radius: 8px;
}

.containerPreviewUpload {
  display: grid;
  grid-template-areas: 
  "image paragraph";
  grid-template-columns: 75px auto;

}

.containerPreviewUpload .previewParagraph {
  grid-area: paragraph;
  display: flex;
  align-items: center;
}

.containerPreviewUpload .previewImage {
  grid-area: image;
  display: flex;
  flex-direction: row;
  width: 50px; 
  height: 50px;
  border-radius: 50%;
}

.textInputContainer {
  background: var(--gray-800);
  padding: 12px 16px;
  border-radius: 8px;
  box-sizing: border-box;
  border: 2px solid var(--violet-900);
  display: flex;
  align-items: baseline;
}

.textInputContainer:has(input:focus) {
  border-color: var(--violet-400)
}

.textInputContainer:has(input:disabled) {
  opacity: 0.5;
  cursor: not-allowed;
}

.prefix {
  font-size: 12px;
}

.input {
  font-size: 1rem;
  color: var(--white);
  background: transparent;
  border: none;
  width: 100%;

}

.input:focus {
  outline: none !important;
  box-shadow: none !important;

}

.input:disabled {
  cursor: not-allowed;

}

.input::placeholder {
  color: var(--gray-400);

}

.errorMessage {
  color: var(--red-500);
}

